[{"categories":["news"],"content":"Refactoring the website.","date":"2019-02-24","objectID":"/dev-notes-2019-02-24/","tags":["news","programming","javascript"],"title":"Dev Notes - February 24th, 2019","uri":"/dev-notes-2019-02-24/"},{"categories":["news"],"content":"I decided to refactor my website to make it easier to use and update as well as remove HTTPS support since it was expensive and not really necessary for my needs. In short, huge mistake. First issue was with stopping auto-redirect after disabling HSTS (HTTP Strict Transport Security) and the SSL endpoint. Seems like disabling it should be really straightforward but turns out it really isn’t because browsers cache a lot of information and the default age of HSTS is pretty long (60+ days). chrome://net-internals/#hsts How to clear HSTS settings in Chrome and Firefox The other major issue was trying to upgrade packages. The world does not want me to use bower anymore but upgrading my site to use npm or Webpack or whatever is currently the hot new thing takes time and time I don’t really want to spend. Just give me the basics please. ","date":"2019-02-24","objectID":"/dev-notes-2019-02-24/:0:0","tags":["news","programming","javascript"],"title":"Dev Notes - February 24th, 2019","uri":"/dev-notes-2019-02-24/"},{"categories":["news"],"content":"Upgrading the website.","date":"2017-10-23","objectID":"/dev-notes-2017-10-23/","tags":["news","programming","javascript"],"title":"Dev Notes - October 23rd, 2017","uri":"/dev-notes-2017-10-23/"},{"categories":["news"],"content":"In updating my blog finally with some dev notes, it became quickly apparent that my website tech was outdated already. Yet another reason I really don’t like web dev. Few things: Apparently Bower is now deprecated and need to move to Yarn: Prevent this by migrating to Yarn Currently I maintain a ‘private’ version and public version of the website. The reasons I did this seem no longer valid. I’ve been paying to have a secure HTTPS version of the site. This no longer seems necessary. ","date":"2017-10-23","objectID":"/dev-notes-2017-10-23/:0:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 23rd, 2017","uri":"/dev-notes-2017-10-23/"},{"categories":["news"],"content":"Chromium Embedded Foundation (CEF) As part of this what I’m exploring is the possibility of using CEF inside an game engine, but have the output of the game engine run as an element inside the rendered HTML. So the idea here would be to render the frame into a framebuffer, convert it into something CEF can consume, and have it display it through it’s render compositor so that it could be layered appropriately. This seems like a request others have had as well, but without any solid answers. It’s hard to differentiate between OSR (off screen rendering) and this request. However, you can hook into the OSR to handle rendering of certain rects so it’s possible you could go through that. Another option would be to do a Pepper plugin like the Flash plugin did. ","date":"2017-10-23","objectID":"/dev-notes-2017-10-23/:1:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 23rd, 2017","uri":"/dev-notes-2017-10-23/"},{"categories":["news"],"content":"Resources Pepper Plugin Docs CEF Custom Handler Rendering to a tag Custom image content Display buffer into HTML canvas Compositing Information Scheme Handler Docs CEF Custom Scene OSR issue ","date":"2017-10-23","objectID":"/dev-notes-2017-10-23/:1:1","tags":["news","programming","javascript"],"title":"Dev Notes - October 23rd, 2017","uri":"/dev-notes-2017-10-23/"},{"categories":["news"],"content":"Musings and explorations while traveling.","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"Traveling is always my most productive time for random thoughts and coding exercises. Doesn’t always mean clean code in fact it basically never does, but I always have a list of topics I’d like to explore and then when on a plane I finally have time to do that. This time I tackled a few topics: SQLite-net Reveal.js Browser extensions (webpack, TypeScript) ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:0:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"Reveal.js For work, I create presentations using PowerPoint quite a bit. It’s intuitive to use and makes it very easy to slap a presentation together, but it does have some limits. Some goals: Have a presentation that runs standalone. Do NOT want it running in a browser. ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:1:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"Standalone To solve this problem, there turns out to be a good solution: Electron. Alternative is NWJS.io ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:1:1","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"Resources http://rollingstones.vizzuality.com https://www.xplatform.rocks/2015/02/19/developer-presentations-using-reveal-js/ https://www.sitepoint.com/creating-slick-html-presentations-using-reveal-js/ reveal.js demo ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:1:2","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"SQLite As with a lot of tech exploration the big problem is too much information. Finally found a decent tutorial that made this straightforward. ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:2:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["news"],"content":"Browser Extensions This was really tricky mostly. ","date":"2017-10-22","objectID":"/dev-notes-2017-10-22/:3:0","tags":["news","programming","javascript"],"title":"Dev Notes - October 22nd, 2017","uri":"/dev-notes-2017-10-22/"},{"categories":["documentation"],"content":"Explorations into Emscripten and WASM.","date":"2017-05-20","objectID":"/emscripten/","tags":["news","programming","javascript"],"title":"Emscripten","uri":"/emscripten/"},{"categories":["documentation"],"content":"As it happens, we can’t actually build native plugins since VSCode is built off Javascript/Typescript. I have a vague memory of setting up Emscripten in the past and it not being that painful to setup, but this experience was less than pleasant. The major issue I ran into was that ‘emcc.bat’ calls ‘Python’ but the default version of Python that I use is 32-bit while the binaries included in most standard versions of Emscript are 64-bit. This results in a somewhat obscure error “#todo” The other problem is that vs-code always assumes that you install the plugin which results in copying files destructively into the MSBuild folder. This is, I suppose, fine for some people, but I want an out-of-the-box solution that just works. To do this, you need to have import statements in the vcxproj file for Visual Studio. This also means significant changes to vs-code. There is a somewhat good example of this from the UE4 project. Apparently there is an option to pass the config file path directly to emcc via –em-config. Otherwise it always tries to create one in your user folder which is not ideal. Other Notes First off, let me just say that I am very impressed with the Emscripten project. It is fantastic that people are supporting this and opening up this whole new world to the web. That being said, I do think the project needs a lot of work and code review. The Python files in emscripten project could really use a pylint pass and some standarization. ","date":"2017-05-20","objectID":"/emscripten/:0:0","tags":["news","programming","javascript"],"title":"Emscripten","uri":"/emscripten/"},{"categories":["documentation"],"content":"Related https://github.com/Microsoft/vscode/issues/658 https://github.com/Microsoft/vscode-vsce/issues/54 https://github.com/Microsoft/vscode/issues/1589 https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md https://github.com/RLovelett/node-sourcekit/issues/14 https://github.com/cortezcristian/dosbox-client/tree/master/dosbox https://github.com/caiiiycuk/js-dos.com/ https://code.visualstudio.com/docs/tools/samples https://github.com/Microsoft/vscode-extension-samples/tree/master/previewhtml-sample ","date":"2017-05-20","objectID":"/emscripten/:1:0","tags":["news","programming","javascript"],"title":"Emscripten","uri":"/emscripten/"},{"categories":["documentation"],"content":"Resources https://github.com/kripken/emscripten/blob/07b87426f898d6e9c677db291d9088c839197291/site/source/docs/building_from_source/manually_integrating_emscripten_with_vs2010.rst https://github.com/juj/vs-tool https://github.com/james-allison/vs-tool ","date":"2017-05-20","objectID":"/emscripten/:2:0","tags":["news","programming","javascript"],"title":"Emscripten","uri":"/emscripten/"},{"categories":["Documentation"],"content":"Introduction to how the website is setup.","date":"0001-01-01","objectID":"/web-programming/","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"As a C++ programmer by profession, every few years I look into the web and scoff at it. The tools are usually nowhere near the robustness I’m used to and the level of control I have is just not the same. As a type-safe programmer, Javascript upsets me and the likes of jQuery scare me. But over time I’ve come to realize that this is in great part due to my fear of the unknown. Yes, there are parts of web programming that are truly terrible (See NPM left-pad Chaos), but it’s really coming around at least from my perspective. TypeScript and CoffeeScript exist for those of us that like some degree of type safety. NodeJS for Visual Studio is great and debugging works beautifully. And we have tools like Grunt which provide a ‘compile’ step for for code cleanup, validation, image optimization and much more. ","date":"0001-01-01","objectID":"/web-programming/:0:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Pillars This is just a side project of mine and as with any side project you need to set some boundaries and goals or you’ll never ship anything (something I have ample experience with). So, I boiled it down to these fundamental goals: Create something that is easy to maintain As easy to deploy live as possible Can test it locally while traveling ","date":"0001-01-01","objectID":"/web-programming/:1:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"The Stack ","date":"0001-01-01","objectID":"/web-programming/:2:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Backend Heroku NodeJS Grunt Express HARP ","date":"0001-01-01","objectID":"/web-programming/:2:1","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Frontend jQuery Bootstrap SASS EJS ","date":"0001-01-01","objectID":"/web-programming/:2:2","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Tools Windows 10 Visual Studio 2015 Sublime Heroku CLI ","date":"0001-01-01","objectID":"/web-programming/:2:3","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Server Setup Turns out Heroku is pretty great. Up until now I’ve always had a Linux server somewhere that I manually setup and maintain. Either with a LAMP stack or something similar. It’s always a pain to maintain and I need to SFTP or SSH into it to do any work at all. The control was nice, but the issue is that I’m not a web programmer and my day-to-day is actually in Windows or Mac OS which means I’m never really efficient in Linux as much as I’d like to pretend I am. To satisfy goals 2) and 3) this simply will not work for me. And then I found the servers as a service model like Heroku. The price is relatively competitive with a bit of cost for the convenience. To deploy, you simply connect it to your GitHub account which allows for private accounts as well. When you submit to GitHub it automatically pulls and builds it. Setup is easy, in the root of your project you define: app.json Basic description of your application. Procfile Command to launch the web server (e.g. node server.js) package.json This is used by npm to store information about the package. Here you define dependencies, basic information like username and email, and so on. Once you have these defined and a basic NodeJS server ","date":"0001-01-01","objectID":"/web-programming/:3:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Postgres Heroku also has postgres support directly which can be very handy and easy to use connection using pgAdmin III. Details on connecting using NodeJS: Connecting in NodeJS Also some details on Connecting to Postgres You can get all the details about the server from the stats page in my case something like this: https://postgres.heroku.com/databases/jvaneenwyk-database I ran into the following: connect to PostgreSQL server: FATAL: no pg_hba.conf entry for host \"4X.XXX.XX.XXX\" Turns out this was because I didn’t enable SSL. var pg = require('pg'); pg.defaults.ssl = true; var client = new pg.Client() pg.connect(process.env.PG_REMOTE_URL, function(err, client) { if (err) { console.log('Failed to connect to remote postgres. Connecting to local postgres'); console.log(err); pg.connect(process.env.PG_LOCAL_URL, function(err, client) { if (err) { console.log('Failed to connect to local postgres'); console.log(err); } else { setupDatabase(client); } }); } else { setupDatabase(client); } }); ","date":"0001-01-01","objectID":"/web-programming/:4:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Other Technology There are innumerable other technologies I looked at while implementing my website that I haven’t even started to have time to look at. You can add unfurl tags (http://tinyurl.com/pu59bre) via oEmbed server or HTML meta tags for Facebook OpenGraph. For live editing you have StackEdit and Prose.io and numerous others which all seem pretty great, but honestly if you’re using GitHub then you can use your favorite desktop app like Sublime in my case. Cloudpipes is another that caught my eye, but spending money to visually program automated interactions with the world seems a bit strange to me. ","date":"0001-01-01","objectID":"/web-programming/:5:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["Documentation"],"content":"Resources ","date":"0001-01-01","objectID":"/web-programming/:6:0","tags":["news","programming","javascript"],"title":"Web Programming for Console Developers","uri":"/web-programming/"},{"categories":["news"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/appveyor/","tags":["news","programming","javascript"],"title":"AppVeyor Explorations","uri":"/appveyor/"},{"categories":["news"],"content":"After my very positive experience with Travis CI (see Homepage Build), I decided it was time to take a look at some Windows options for builds. This led me very quickly to AppVeyor. But unfortunately, I don’t have a Windows project to test this on, so I made one up. I’ve long been a fan of DosBox and since I follow DosNostalgic I can’t help but be reminded daily of how much I love past games. That mixed with my recent adoption of VSCode for my hobby coding (which is slowly deprecating Sublime for me) resulted in me wanting to create a plugin for VSCode to quickly preview sample assembler projects. I decided perhaps the best way to do this was hook into DosBox. So yeah, I forked off https://github.com/dreamlayers/em-dosbox and went at it. I thought about instead starting from https://github.com/joncampbell123/dosbox-x especially given the goal they have of targeting the demo scene, but it’s a bit more of a deviation from standard DosBox than I wanted. Plus, it’d be nice to perhaps merge some of my work back to mainline someday, though the realist in me thinks that’ll never happen. You can find my work here: https://github.com/joelvaneenwyk/dosbox So the two tasks I wanted to achieve short-term: Convert to VS2015 Have it build automatically with AppVeyor This was amazingly easy and already working here: https://ci.appveyor.com/project/joelvaneenwyk/dosbox And look how simple the configuration for this is: version:1.0.{build}configuration:Releaseplatform:x86install:- cmd:\u003e-git submodule update --init --recursive python src\\version.py include/version.h . nonebefore_build:- cmd:build/build_dependencies.batbuild:project:visualc_net/dosbox.slnverbosity:minimal We live in an amazing time. I wish we had such simple build scripts at work! Now that this is working, the next step is to get Emscripten build working. ","date":"2016-01-27","objectID":"/appveyor/:0:0","tags":["news","programming","javascript"],"title":"AppVeyor Explorations","uri":"/appveyor/"},{"categories":["news"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/deep-learning/","tags":["news","programming","javascript"],"title":"Deep Learning","uri":"/deep-learning/"},{"categories":["news"],"content":"Turns out deep learning is kind of a big deal right now and for good reason. It’s cool, powerful, GPU-friendly, and just pretty great. I wanted to be a part of the fun and realized it wasn’t as easy to do for Windows developers. But the good news is that it is actually supported. Found this useful: https://www.quora.com/How-does-Enthought-Canopy-compare-to-Anaconda The stack: Anaconda x64 (https://www.continuum.io/downloads) Make sure to select the 64-bit version! Steps: Install Anaconda x64 Alternative could use http://conda.pydata.org/miniconda.html but haven’t tried it git clone https://github.com/BVLC/caffe/tree/windows pip install Issues Ran into https://github.com/BVLC/caffe/issues/782 while working on it and the issue was that my PYTHONPATH was not set to D:\\Tools\\caffe\\Build\\x64\\Release\\pycaffe. Do NOT set it to the subdirectory: D:\\Tools\\caffe\\Build\\x64\\Release\\pycaffe\\caffe Resources https://www.scipy.org/install.html https://www.enthought.com/products/canopy/ https://github.com/google/deepdream/blob/master/dream.ipynb https://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.gc2fcdcce7_216_0 ","date":"2016-01-27","objectID":"/deep-learning/:0:0","tags":["news","programming","javascript"],"title":"Deep Learning","uri":"/deep-learning/"},{"categories":["news","magic"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/gpu/","tags":["news","programming","javascript"],"title":"GPU","uri":"/gpu/"},{"categories":["news","magic"],"content":"Long have I wanted to create a cross-platform raytracing system that works on Xbox One, PS4, PC and whatever modern platform is in style at the moment. You have some common options including CUDA, OpenCL, and others. Essentially it seems what I want is a cross-platform https://developer.nvidia.com/optix written in something like OpenCL or something. There are some path-tracers commercialized for this (e.g. https://home.otoy.com/render/brigade/). This seems to be quite commonly regarded as an impossible task [1]. There are some things that help this along however like with Hemi [2] which attempts to use macros to hide some things. ","date":"2016-01-27","objectID":"/gpu/:0:0","tags":["news","programming","javascript"],"title":"GPU","uri":"/gpu/"},{"categories":["news","magic"],"content":"Tools https://github.com/GPUOpen-Tools/CodeXL ","date":"2016-01-27","objectID":"/gpu/:1:0","tags":["news","programming","javascript"],"title":"GPU","uri":"/gpu/"},{"categories":["news","magic"],"content":"Resources [1] https://www.reddit.com/r/compsci/comments/304423/cross_platform_gpu_computation_for_real_time_ray/cpp6rne [2] https://devblogs.nvidia.com/parallelforall/developing-portable-cuda-cc-code-hemi/ ","date":"2016-01-27","objectID":"/gpu/:2:0","tags":["news","programming","javascript"],"title":"GPU","uri":"/gpu/"},{"categories":["news"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/vapes/","tags":["news","programming","javascript"],"title":"Vapes","uri":"/vapes/"},{"categories":["news"],"content":"This outlines my very brief look into the world of vaping. ","date":"2016-01-27","objectID":"/vapes/:0:0","tags":["news","programming","javascript"],"title":"Vapes","uri":"/vapes/"},{"categories":["news"],"content":"Resources Grease case: https://blackrockog.com/pages/best-oil-vape-pen-case?utm_source=whaxy\u0026utm_medium=content\u0026utm_content=casegrid\u0026utm_campaign=vapecartridges Decent pen: http://kandypens.com/gravity-quartz-crystal-coilless-ceramic-vaporizer-sandblasted-black.html High CPD: https://www.medicaljane.com/review/pop-naturals-high-cbd-co2-oil-cartridge-review/ Vape: https://www.sourcevapes.com/collections/top-rated-products/products/flosstradamus-source-orb-xl-gr1-ti-triple-coil-vape-pen?variant=14140365062 ","date":"2016-01-27","objectID":"/vapes/:1:0","tags":["news","programming","javascript"],"title":"Vapes","uri":"/vapes/"},{"categories":["news"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/website-launch/","tags":["news","programming","javascript"],"title":"Website Launched","uri":"/website-launch/"},{"categories":["news"],"content":"{ “private”: false, “title”: “Website Launch!”, “tags”: [“news”], “published”: “8/20/2016”, “abstract”: “Finally launched the website and have the main components in place. Long time coming, but good to have something available.” } This website has been in the works for quite some time now, but finally pushing it out to the world. It is nice to have a place to store my experiments and thoughts, but in great part this website is here as a testing ground for me to play with web technologies. I’m a console game programmer by trade, but it’s always interesting to play with the new hotness. Usually that isn’t in the web world but hey, it’s all interesting to me. The website lives on Heroku and the source is all available on GitHub. My plan/hope is to post more about this in the coming weeks/months, but who knows. Primarily I want to do this for myself so that I don’t forget how to do this. If you observe my code submit patterns you’ll notice they are all over the place because I travel quite a bit and stop working on things for myself. ","date":"2016-01-27","objectID":"/website-launch/:0:0","tags":["news","programming","javascript"],"title":"Website Launched","uri":"/website-launch/"},{"categories":["Markdown"],"content":"Explorations into open source build systems for Windows using DosBox.","date":"2016-01-27","objectID":"/tools/","tags":["Markdown","HTML"],"title":"Tools","uri":"/tools/"},{"categories":["Markdown"],"content":" Visual Studio Sublime pgAdmin III P4V NodeJS PTVS (Python Tools for VS) ","date":"2016-01-27","objectID":"/tools/:0:0","tags":["Markdown","HTML"],"title":"Tools","uri":"/tools/"},{"categories":["Markdown"],"content":"Tools to Explore http://rmarkdown.rstudio.com/index.html HostsMan a tool for editing your Hosts file Comparison of tools for this: https://winbeginner.com/hosts-file-editor-windows/ Helpful Utilities https://justgetflux.com/ Helps with eye strain Writing Documentation My preferred way of writing documentation is definitely Markdown. Preferably with IEEE reference style (http://library.queensu.ca/book/export/html/5846). ","date":"2016-01-27","objectID":"/tools/:1:0","tags":["Markdown","HTML"],"title":"Tools","uri":"/tools/"},{"categories":null,"content":"  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveItHugo Theme LoveIt \" Hugo Theme LoveIt ","date":"2019-08-02","objectID":"/theme/:0:0","tags":null,"title":"About LoveIt","uri":"/theme/"},{"categories":null,"content":"Features Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported  Automatically converted images with Lazy Load by lazysizes Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances Extended Features  Search supported by Lunr.js or algolia  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Dynamic scroll supported by Smooth Scroll  Cookie consent banner supported by cookieconsent … ","date":"2019-08-02","objectID":"/theme/:0:1","tags":null,"title":"About LoveIt","uri":"/theme/"},{"categories":null,"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/theme/:0:2","tags":null,"title":"About LoveIt","uri":"/theme/"},{"categories":null,"content":" Email: joel.vaneenwyk@gmail.com ","date":"0001-01-01","objectID":"/contact/:0:0","tags":null,"title":"Contact","uri":"/contact/"},{"categories":null,"content":"Social Twitter ","date":"0001-01-01","objectID":"/contact/:1:0","tags":null,"title":"Contact","uri":"/contact/"},{"categories":null,"content":"Introduction ⚠ 🚧 This is a work in progress. You have landed on my page it seems. My interests are all over the place but you will see some commonality in my love for low-level coding, graphics, emulation, and DevOps type work. Finding clean, reproducible, processes that make it easier for groups of people to iterate on code and innovate gets me pretty excited. Currently working on cross-platform provisioning scripts built with Docker, Ansible, and many other tried and true tools. ","date":"0001-01-01","objectID":"/about/:1:0","tags":null,"title":"Joel Van Eenwyk","uri":"/about/"}]