[
    {
        "categories": ["News"],
        "content": "Switch to Hugo static site",
        "date": "2021-08-11",
        "objectID": "/website-hugo-refresh/",
        "tags": ["News", "Programming", "Web"],
        "title": "Hugo Website Refresh",
        "uri": "/website-hugo-refresh/"
    },
    {
        "categories": ["News"],
        "content": "Finally made the switch to Hugo after battling with my hand-crafted website for too long. Final straw was that there were just too many out-of-date dependencies which caused everything to break in small and subtle ways. My options were to either spend a lot of time fixing that site or start from scratch. The former option would mean being stuck with hand-crafted garbage that would inevitably break again or switch to something that would last a bit longer (hopefully) and be a bit more battle-tested. Was able to trivially migrate Blogger posts with blog2md. Only downside was some of the files resulted in errors in Hugo that gave me no valuable information at all. Turns out the issue was due to comments not being handled properly. Error: Error building site: failed to render pages: render of \"page\" failed: execute of template failed: template: posts/single.html:85:140: executing \"content\" at \u003cpartial \"function/content.html\"\u003e: error calling partial: \"D:\\Projects\\joelvaneenwyk\\joelvaneenwyk-homepage\\themes\\base\\layouts\\partials\\function\\content.html:4:19\": execute of template failed: template: partials/function/content.html:4:19: executing \"partials/function/content.html\" at \u003cpartial \"function/ruby.html\" $content\u003e: error calling partial: partial that returns a value needs a non-zero argument. ",
        "date": "2021-08-11",
        "objectID": "/website-hugo-refresh/:0:0",
        "tags": ["News", "Programming", "Web"],
        "title": "Hugo Website Refresh",
        "uri": "/website-hugo-refresh/"
    },
    {
        "categories": ["News"],
        "content": "Refactoring the website.",
        "date": "2019-02-24",
        "objectID": "/dev-notes-2019-02-24/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - February 24th, 2019",
        "uri": "/dev-notes-2019-02-24/"
    },
    {
        "categories": ["News"],
        "content": "I decided to refactor my website to make it easier to use and update as well as remove HTTPS support since it was expensive and not really necessary for my needs. In short, huge mistake. First issue was with stopping auto-redirect after disabling HSTS (HTTP Strict Transport Security) and the SSL endpoint. Seems like disabling it should be really straightforward but turns out it really isn’t because browsers cache a lot of information and the default age of HSTS is pretty long (60+ days). chrome://net-internals/#hsts How to clear HSTS settings in Chrome and Firefox The other major issue was trying to upgrade packages. The world does not want me to use bower anymore but upgrading my site to use npm or Webpack or whatever is currently the hot new thing takes time and time I don’t really want to spend. Just give me the basics please. ",
        "date": "2019-02-24",
        "objectID": "/dev-notes-2019-02-24/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - February 24th, 2019",
        "uri": "/dev-notes-2019-02-24/"
    },
    {
        "categories": ["News"],
        "content": "Upgrading the website.",
        "date": "2017-10-23",
        "objectID": "/dev-notes-2017-10-23/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 23rd, 2017",
        "uri": "/dev-notes-2017-10-23/"
    },
    {
        "categories": ["News"],
        "content": "In updating my blog finally with some dev notes, it became quickly apparent that my website tech was outdated already. Yet another reason I really don’t like web dev. Few things: Apparently Bower is now deprecated and need to move to Yarn: Prevent this by migrating to Yarn Currently I maintain a ‘private’ version and public version of the website. The reasons I did this seem no longer valid. I’ve been paying to have a secure HTTPS version of the site. This no longer seems necessary. ",
        "date": "2017-10-23",
        "objectID": "/dev-notes-2017-10-23/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 23rd, 2017",
        "uri": "/dev-notes-2017-10-23/"
    },
    {
        "categories": ["News"],
        "content": "Chromium Embedded Foundation (CEF) As part of this what I’m exploring is the possibility of using CEF inside an game engine, but have the output of the game engine run as an element inside the rendered HTML. So the idea here would be to render the frame into a framebuffer, convert it into something CEF can consume, and have it display it through it’s render compositor so that it could be layered appropriately. This seems like a request others have had as well, but without any solid answers. It’s hard to differentiate between OSR (off screen rendering) and this request. However, you can hook into the OSR to handle rendering of certain rects so it’s possible you could go through that. Another option would be to do a Pepper plugin like the Flash plugin did. ",
        "date": "2017-10-23",
        "objectID": "/dev-notes-2017-10-23/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 23rd, 2017",
        "uri": "/dev-notes-2017-10-23/"
    },
    {
        "categories": ["News"],
        "content": "Resources Pepper Plugin Docs CEF Custom Handler Rendering to a tag Custom image content Display buffer into HTML canvas Compositing Information Scheme Handler Docs CEF Custom Scene OSR issue ",
        "date": "2017-10-23",
        "objectID": "/dev-notes-2017-10-23/:1:1",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 23rd, 2017",
        "uri": "/dev-notes-2017-10-23/"
    },
    {
        "categories": ["News"],
        "content": "Musings and explorations while traveling.",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "Traveling is always my most productive time for random thoughts and coding exercises. Doesn’t always mean clean code in fact it basically never does, but I always have a list of topics I’d like to explore and then when on a plane I finally have time to do that. This time I tackled a few topics: SQLite-net Reveal.js Browser extensions (webpack, TypeScript) ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "Reveal.js For work, I create presentations using PowerPoint quite a bit. It’s intuitive to use and makes it very easy to slap a presentation together, but it does have some limits. Some goals: Have a presentation that runs standalone. Do NOT want it running in a browser. ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "Standalone To solve this problem, there turns out to be a good solution: Electron. Alternative is NWJS.io ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:1:1",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "Resources http://rollingstones.vizzuality.com https://www.xplatform.rocks/2015/02/19/developer-presentations-using-reveal-js/ https://www.sitepoint.com/creating-slick-html-presentations-using-reveal-js/ reveal.js demo ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:1:2",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "SQLite As with a lot of tech exploration the big problem is too much information. Finally found a decent tutorial that made this straightforward. ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:2:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["News"],
        "content": "Browser Extensions This was really tricky mostly. ",
        "date": "2017-10-22",
        "objectID": "/dev-notes-2017-10-22/:3:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Dev Notes - October 22nd, 2017",
        "uri": "/dev-notes-2017-10-22/"
    },
    {
        "categories": ["documentation"],
        "content": "Explorations into Emscripten and WASM.",
        "date": "2017-05-20",
        "objectID": "/emscripten/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Emscripten",
        "uri": "/emscripten/"
    },
    {
        "categories": ["documentation"],
        "content": "As it happens, we can’t actually build native plugins since VSCode is built off Javascript/Typescript. I have a vague memory of setting up Emscripten in the past and it not being that painful to setup, but this experience was less than pleasant. The major issue I ran into was that ‘emcc.bat’ calls ‘Python’ but the default version of Python that I use is 32-bit while the binaries included in most standard versions of Emscript are 64-bit. This results in a somewhat obscure error “#todo” The other problem is that vs-code always assumes that you install the plugin which results in copying files destructively into the MSBuild folder. This is, I suppose, fine for some people, but I want an out-of-the-box solution that just works. To do this, you need to have import statements in the vcxproj file for Visual Studio. This also means significant changes to vs-code. There is a somewhat good example of this from the UE4 project. Apparently there is an option to pass the config file path directly to emcc via –em-config. Otherwise it always tries to create one in your user folder which is not ideal. Other Notes First off, let me just say that I am very impressed with the Emscripten project. It is fantastic that people are supporting this and opening up this whole new world to the web. That being said, I do think the project needs a lot of work and code review. The Python files in emscripten project could really use a pylint pass and some standarization. ",
        "date": "2017-05-20",
        "objectID": "/emscripten/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Emscripten",
        "uri": "/emscripten/"
    },
    {
        "categories": ["documentation"],
        "content": "Related https://github.com/Microsoft/vscode/issues/658 https://github.com/Microsoft/vscode-vsce/issues/54 https://github.com/Microsoft/vscode/issues/1589 https://github.com/electron/electron/blob/master/docs/tutorial/using-native-node-modules.md https://github.com/RLovelett/node-sourcekit/issues/14 https://github.com/cortezcristian/dosbox-client/tree/master/dosbox https://github.com/caiiiycuk/js-dos.com/ https://code.visualstudio.com/docs/tools/samples https://github.com/Microsoft/vscode-extension-samples/tree/master/previewhtml-sample ",
        "date": "2017-05-20",
        "objectID": "/emscripten/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Emscripten",
        "uri": "/emscripten/"
    },
    {
        "categories": ["documentation"],
        "content": "Resources https://github.com/kripken/emscripten/blob/07b87426f898d6e9c677db291d9088c839197291/site/source/docs/building_from_source/manually_integrating_emscripten_with_vs2010.rst https://github.com/juj/vs-tool https://github.com/james-allison/vs-tool ",
        "date": "2017-05-20",
        "objectID": "/emscripten/:2:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Emscripten",
        "uri": "/emscripten/"
    },
    {
        "categories": ["Documentation"],
        "content": "Introduction to how the website is setup.",
        "date": "0001-01-01",
        "objectID": "/web-programming/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "As a C++ programmer by profession, every few years I look into the web and scoff at it. The tools are usually nowhere near the robustness I’m used to and the level of control I have is just not the same. As a type-safe programmer, Javascript upsets me and the likes of jQuery scare me. But over time I’ve come to realize that this is in great part due to my fear of the unknown. Yes, there are parts of web programming that are truly terrible (See NPM left-pad Chaos), but it’s really coming around at least from my perspective. TypeScript and CoffeeScript exist for those of us that like some degree of type safety. NodeJS for Visual Studio is great and debugging works beautifully. And we have tools like Grunt which provide a ‘compile’ step for for code cleanup, validation, image optimization and much more. ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Pillars This is just a side project of mine and as with any side project you need to set some boundaries and goals or you’ll never ship anything (something I have ample experience with). So, I boiled it down to these fundamental goals: Create something that is easy to maintain As easy to deploy live as possible Can test it locally while traveling ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "The Stack ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:2:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Backend Heroku NodeJS Grunt Express HARP ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:2:1",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Frontend jQuery Bootstrap SASS EJS ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:2:2",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Tools Windows 10 Visual Studio 2015 Sublime Heroku CLI ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:2:3",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Server Setup Turns out Heroku is pretty great. Up until now I’ve always had a Linux server somewhere that I manually setup and maintain. Either with a LAMP stack or something similar. It’s always a pain to maintain and I need to SFTP or SSH into it to do any work at all. The control was nice, but the issue is that I’m not a web programmer and my day-to-day is actually in Windows or Mac OS which means I’m never really efficient in Linux as much as I’d like to pretend I am. To satisfy goals 2) and 3) this simply will not work for me. And then I found the servers as a service model like Heroku. The price is relatively competitive with a bit of cost for the convenience. To deploy, you simply connect it to your GitHub account which allows for private accounts as well. When you submit to GitHub it automatically pulls and builds it. Setup is easy, in the root of your project you define: app.json Basic description of your application. Procfile Command to launch the web server (e.g. node server.js) package.json This is used by npm to store information about the package. Here you define dependencies, basic information like username and email, and so on. Once you have these defined and a basic NodeJS server ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:3:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Postgres Heroku also has postgres support directly which can be very handy and easy to use connection using pgAdmin III. Details on connecting using NodeJS: Connecting in NodeJS Also some details on Connecting to Postgres You can get all the details about the server from the stats page in my case something like this: https://postgres.heroku.com/databases/jvaneenwyk-database I ran into the following: connect to PostgreSQL server: FATAL: no pg_hba.conf entry for host \"4X.XXX.XX.XXX\" Turns out this was because I didn’t enable SSL. var pg = require('pg'); pg.defaults.ssl = true; var client = new pg.Client() pg.connect(process.env.PG_REMOTE_URL, function(err, client) { if (err) { console.log('Failed to connect to remote postgres. Connecting to local postgres'); console.log(err); pg.connect(process.env.PG_LOCAL_URL, function(err, client) { if (err) { console.log('Failed to connect to local postgres'); console.log(err); } else { setupDatabase(client); } }); } else { setupDatabase(client); } }); ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:4:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Other Technology There are innumerable other technologies I looked at while implementing my website that I haven’t even started to have time to look at. You can add unfurl tags (http://tinyurl.com/pu59bre) via oEmbed server or HTML meta tags for Facebook OpenGraph. For live editing you have StackEdit and Prose.io and numerous others which all seem pretty great, but honestly if you’re using GitHub then you can use your favorite desktop app like Sublime in my case. Cloudpipes is another that caught my eye, but spending money to visually program automated interactions with the world seems a bit strange to me. ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:5:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["Documentation"],
        "content": "Resources ",
        "date": "0001-01-01",
        "objectID": "/web-programming/:6:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Web Programming for Console Developers",
        "uri": "/web-programming/"
    },
    {
        "categories": ["News"],
        "content": "Finally launched the website and have the main components in place. Long time coming, but good to have something available.",
        "date": "2016-08-20",
        "objectID": "/website-launch/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Website Launched",
        "uri": "/website-launch/"
    },
    {
        "categories": ["News"],
        "content": "This website has been in the works for quite some time now, but finally pushing it out to the world. It is nice to have a place to store my experiments and thoughts, but in great part this website is here as a testing ground for me to play with web technologies. I’m a console game programmer by trade, but it’s always interesting to play with the new hotness. Usually that isn’t in the web world but hey, it’s all interesting to me. The website lives on Heroku and the source is all available on GitHub. My plan/hope is to post more about this in the coming weeks/months, but who knows. Primarily I want to do this for myself so that I don’t forget how to do this. If you observe my code submit patterns you’ll notice they are all over the place because I travel quite a bit and stop working on things for myself. ",
        "date": "2016-08-20",
        "objectID": "/website-launch/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Website Launched",
        "uri": "/website-launch/"
    },
    {
        "categories": ["News"],
        "content": "Explorations into open source build systems for Windows using DosBox.",
        "date": "2016-01-27",
        "objectID": "/appveyor/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "AppVeyor Explorations",
        "uri": "/appveyor/"
    },
    {
        "categories": ["News"],
        "content": "After my very positive experience with Travis CI (see Homepage Build), I decided it was time to take a look at some Windows options for builds. This led me very quickly to AppVeyor. But unfortunately, I don’t have a Windows project to test this on, so I made one up. I’ve long been a fan of DosBox and since I follow DosNostalgic I can’t help but be reminded daily of how much I love past games. That mixed with my recent adoption of VSCode for my hobby coding (which is slowly deprecating Sublime for me) resulted in me wanting to create a plugin for VSCode to quickly preview sample assembler projects. I decided perhaps the best way to do this was hook into DosBox. So yeah, I forked off https://github.com/dreamlayers/em-dosbox and went at it. I thought about instead starting from https://github.com/joncampbell123/dosbox-x especially given the goal they have of targeting the demo scene, but it’s a bit more of a deviation from standard DosBox than I wanted. Plus, it’d be nice to perhaps merge some of my work back to mainline someday, though the realist in me thinks that’ll never happen. You can find my work here: https://github.com/joelvaneenwyk/dosbox So the two tasks I wanted to achieve short-term: Convert to VS2015 Have it build automatically with AppVeyor This was amazingly easy and already working here: https://ci.appveyor.com/project/joelvaneenwyk/dosbox And look how simple the configuration for this is: version:1.0.{build}configuration:Releaseplatform:x86install:- cmd:\u003e-git submodule update --init --recursive python src\\version.py include/version.h . nonebefore_build:- cmd:build/build_dependencies.batbuild:project:visualc_net/dosbox.slnverbosity:minimal We live in an amazing time. I wish we had such simple build scripts at work! Now that this is working, the next step is to get Emscripten build working. ",
        "date": "2016-01-27",
        "objectID": "/appveyor/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "AppVeyor Explorations",
        "uri": "/appveyor/"
    },
    {
        "categories": ["News"],
        "content": "Explorations into open source build systems for Windows using DosBox.",
        "date": "2016-01-27",
        "objectID": "/deep-learning/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Deep Learning",
        "uri": "/deep-learning/"
    },
    {
        "categories": ["News"],
        "content": "Turns out deep learning is kind of a big deal right now and for good reason. It’s cool, powerful, GPU-friendly, and just pretty great. I wanted to be a part of the fun and realized it wasn’t as easy to do for Windows developers. But the good news is that it is actually supported. Found this useful: https://www.quora.com/How-does-Enthought-Canopy-compare-to-Anaconda The stack: Anaconda x64 (https://www.continuum.io/downloads) Make sure to select the 64-bit version! Steps: Install Anaconda x64 Alternative could use http://conda.pydata.org/miniconda.html but haven’t tried it git clone https://github.com/BVLC/caffe/tree/windows pip install Issues Ran into https://github.com/BVLC/caffe/issues/782 while working on it and the issue was that my PYTHONPATH was not set to D:\\Tools\\caffe\\Build\\x64\\Release\\pycaffe. Do NOT set it to the subdirectory: D:\\Tools\\caffe\\Build\\x64\\Release\\pycaffe\\caffe Resources https://www.scipy.org/install.html https://www.enthought.com/products/canopy/ https://github.com/google/deepdream/blob/master/dream.ipynb https://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.gc2fcdcce7_216_0 ",
        "date": "2016-01-27",
        "objectID": "/deep-learning/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Deep Learning",
        "uri": "/deep-learning/"
    },
    {
        "categories": ["News"],
        "content": "Explorations into open source build systems for Windows using DosBox.",
        "date": "2016-01-27",
        "objectID": "/gpu/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "GPU",
        "uri": "/gpu/"
    },
    {
        "categories": ["News"],
        "content": "Long have I wanted to create a cross-platform raytracing system that works on Xbox One, PS4, PC and whatever modern platform is in style at the moment. You have some common options including CUDA, OpenCL, and others. Essentially it seems what I want is a cross-platform https://developer.nvidia.com/optix written in something like OpenCL or something. There are some path-tracers commercialized for this (e.g. https://home.otoy.com/render/brigade/). This seems to be quite commonly regarded as an impossible task [1]. There are some things that help this along however like with Hemi [2] which attempts to use macros to hide some things. ",
        "date": "2016-01-27",
        "objectID": "/gpu/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "GPU",
        "uri": "/gpu/"
    },
    {
        "categories": ["News"],
        "content": "Tools https://github.com/GPUOpen-Tools/CodeXL ",
        "date": "2016-01-27",
        "objectID": "/gpu/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "GPU",
        "uri": "/gpu/"
    },
    {
        "categories": ["News"],
        "content": "Resources [1] https://www.reddit.com/r/compsci/comments/304423/cross_platform_gpu_computation_for_real_time_ray/cpp6rne [2] https://devblogs.nvidia.com/parallelforall/developing-portable-cuda-cc-code-hemi/ ",
        "date": "2016-01-27",
        "objectID": "/gpu/:2:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "GPU",
        "uri": "/gpu/"
    },
    {
        "categories": ["News"],
        "content": "Explorations into open source build systems for Windows using DosBox.",
        "date": "2016-01-27",
        "objectID": "/vapes/",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Vapes",
        "uri": "/vapes/"
    },
    {
        "categories": ["News"],
        "content": "This outlines my very brief look into the world of vaping. ",
        "date": "2016-01-27",
        "objectID": "/vapes/:0:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Vapes",
        "uri": "/vapes/"
    },
    {
        "categories": ["News"],
        "content": "Resources Grease case: https://blackrockog.com/pages/best-oil-vape-pen-case?utm_source=whaxy\u0026utm_medium=content\u0026utm_content=casegrid\u0026utm_campaign=vapecartridges Decent pen: http://kandypens.com/gravity-quartz-crystal-coilless-ceramic-vaporizer-sandblasted-black.html High CPD: https://www.medicaljane.com/review/pop-naturals-high-cbd-co2-oil-cartridge-review/ Vape: https://www.sourcevapes.com/collections/top-rated-products/products/flosstradamus-source-orb-xl-gr1-ti-triple-coil-vape-pen?variant=14140365062 ",
        "date": "2016-01-27",
        "objectID": "/vapes/:1:0",
        "tags": ["News", "Programming", "JavaScript"],
        "title": "Vapes",
        "uri": "/vapes/"
    },
    {
        "categories": ["Markdown"],
        "content": "Explorations into open source build systems for Windows using DosBox.",
        "date": "2016-01-27",
        "objectID": "/tools/",
        "tags": ["Markdown", "HTML"],
        "title": "Tools",
        "uri": "/tools/"
    },
    {
        "categories": ["Markdown"],
        "content": " Visual Studio Sublime pgAdmin III P4V NodeJS PTVS (Python Tools for VS) ",
        "date": "2016-01-27",
        "objectID": "/tools/:0:0",
        "tags": ["Markdown", "HTML"],
        "title": "Tools",
        "uri": "/tools/"
    },
    {
        "categories": ["Markdown"],
        "content": "Tools to Explore http://rmarkdown.rstudio.com/index.html HostsMan a tool for editing your Hosts file Comparison of tools for this: https://winbeginner.com/hosts-file-editor-windows/ Helpful Utilities https://justgetflux.com/ Helps with eye strain Writing Documentation My preferred way of writing documentation is definitely Markdown. Preferably with IEEE reference style (http://library.queensu.ca/book/export/html/5846). ",
        "date": "2016-01-27",
        "objectID": "/tools/:1:0",
        "tags": ["Markdown", "HTML"],
        "title": "Tools",
        "uri": "/tools/"
    },
    {
        "categories": null,
        "content": "  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveItHugo Theme LoveIt \" Hugo Theme LoveIt ",
        "date": "2019-08-02",
        "objectID": "/theme/:0:0",
        "tags": null,
        "title": "About LoveIt",
        "uri": "/theme/"
    },
    {
        "categories": null,
        "content": "Features Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported  Automatically converted images with Lazy Load by lazysizes Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances Extended Features  Search supported by Lunr.js or algolia  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Dynamic scroll supported by Smooth Scroll  Cookie consent banner supported by cookieconsent … ",
        "date": "2019-08-02",
        "objectID": "/theme/:0:1",
        "tags": null,
        "title": "About LoveIt",
        "uri": "/theme/"
    },
    {
        "categories": null,
        "content": "License LoveIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ",
        "date": "2019-08-02",
        "objectID": "/theme/:0:2",
        "tags": null,
        "title": "About LoveIt",
        "uri": "/theme/"
    },
    {
        "categories": null,
        "content": "Hope you all had a great Christmas!!! I certainly did! Got to eat lots of delicious food, did lots of talking with my family, and even opened some presents! Also, an old friend of mine came over and hung out for a while…knew him since I was like 6 years old, so it was cool to finally do some catching up with him. Alright, I must return to the festivities. :) Best wishes and a Merry Christmas to all! ",
        "date": "2005-12-25",
        "objectID": "/merry-christmas/:0:0",
        "tags": null,
        "title": "Merry Christmas!!!",
        "uri": "/merry-christmas/"
    },
    {
        "categories": null,
        "content": "First two days here have been awesome! Already been out to eat twice to get genuine chinese food…oh how I’ve been missing it!! Also did some last-minute Christmas shopping, which was fun. All in all the last few days have been quite relaxing, and it’s something I’ve really needed as this last semester has been somewhat stressful for me. Tomorrow I’m going to get back to work. There are quite a lot of things on my agenda, so some planning is in order first. No matter what…it’ll be fun! :) ",
        "date": "2005-12-21",
        "objectID": "/good-food/:0:0",
        "tags": null,
        "title": "Good food!",
        "uri": "/good-food/"
    },
    {
        "categories": null,
        "content": "Finally, all exams are finished and the winter break can be enjoyed! Last Friday I finished my last exam, and right after I packed my bag and prepared for the flight to China, which left early the next morning. So, after a very long day of flights and only minor delays, I arrived at my destination…it was around 10:30PM on Sunday (local time). At that point, I was completely exhausted and crashed immediately, and for the first time in months, I got over ten hours of sleep! So today, after waking up, I spent most of the time with my family–just talking and catching up on what has been going on in our lives. So now begins my winter break, and the start of some progress on my projects! ",
        "date": "2005-12-19",
        "objectID": "/semester-is-officially-over/:0:0",
        "tags": null,
        "title": "The semester is officially over!",
        "uri": "/semester-is-officially-over/"
    },
    {
        "categories": null,
        "content": "Sorry for the complete lack of updates after promising them. Things suddenly got very crazy again. Next week I have my finals and then I’m done!! On Saturday of next week (17th), I fly back to China where I’ll be spending an entire month. Will be great! :) Very excited to be done with another semester. Anyways, this is just a short update, but after finals are over, I’ll definitely be back to regular updates. ",
        "date": "2005-12-10",
        "objectID": "/quick-update/:0:0",
        "tags": null,
        "title": "Quick update",
        "uri": "/quick-update/"
    },
    {
        "categories": null,
        "content": "Today I focused on Houdini and testing some effects. Houdini’s i3d was giving me a bit of grief as everything turned out really noisy…finally figured it out though. It looks decent, though, so that’s good. Hopefully, there’ll be more to talk about tomorrow. :) ",
        "date": "2005-11-25",
        "objectID": "/friday-effects/:0:0",
        "tags": null,
        "title": "Friday Effects",
        "uri": "/friday-effects/"
    },
    {
        "categories": null,
        "content": "Started the day off with some good coffee, worked some, and then at lunch time went to a friend’s house to spend Thanksgiving. There were quite a few people as much of his family was there. The food was great–turkey, stuffing, cranberry salad, rolls, and so much more! It’s good to have friends who can cook. ;) Afterwards, we played some poker and ended the day with a trip to the theater to watch Harry Potter and the Goblet of Fire. Must say that I really enjoyed that one…they’re getting so much darker now, and I like that. Now I’m back, and utterly exhausted. Hope you all had a great Thanksgiving! ",
        "date": "2005-11-24",
        "objectID": "/thanksgiving-day/:0:0",
        "tags": null,
        "title": "Thanksgiving day",
        "uri": "/thanksgiving-day/"
    },
    {
        "categories": null,
        "content": "There’s always those days that just seem to drag on and on…well, today was just one of those days. Nothing seemed to go well. On the bright side, I did get an animating mesh, but it should not have taken as long as it did…too many other things came up today. Tomorrow is thanksgiving day, so I’ll be going to a friend’s house for part of the day. Hopefully I’ll be back in time to get some work done, but if not, all is good. I think I still have enough time to fulfill my deadline. Well, that’s going to be it for today. No cool links or anything. :) Going to get an early rest and wake up early. Everyone have a happy thanksgiving! ",
        "date": "2005-11-23",
        "objectID": "/slow-day/:0:0",
        "tags": null,
        "title": "Slow day",
        "uri": "/slow-day/"
    },
    {
        "categories": null,
        "content": "Day 2 and I’m still on schedule. The viewport is back to functionality! There’s still a few bugs to work out, but it’s definitely in a usable state. And the navigation is working as well. Tomorrow I’m going to get a walking dude imported and playing in the viewport. That’ll bring me one step closer! Exciting! :) Got to try out Buddha today! My conclusion: very cool! It uses a really interesting method in which it evaluates the program and then allows you to view each step of the process afterwards to see where it went wrong. Debugging functional languages is tough, but I think they have a good solution to the problem. Probably the coolest part for me is that it can actually generate a derivation tree that you can view with GraphViz (dot)! It would get confusing really fast with a large derivation, but nonetheless it can prove to be very useful. I’ll be continuing to play with it, so once I’ve used it a bit more I’ll probably be forced to talk more about it. :) Thanks Eric for pointing me to it! Don’t know how this happened, but I managed to miss the Quake 4 source code release, which was on my birthday!! Downloaded it today and might check it out tomorrow. There isn’t much point, though, as there isn’t too much different between the Doom 3 and Quake 4 engines. Nonetheless, I make it a habit to keep up to date on engines and see how certain problems are overcome. I’ve learned a lot from using and exploring various open source and commercial engines. Anyways, go grab it at: ftp://ftp.idsoftware.com/idstuff/quake4/linux/ Also, happened upon a really interesting application today called Context Free. The software allows you to specify non-deterministic rules that generate images. As the website says, it’s “an environment for editing and rendering CFDG design grammars.” Anyways, give it a try…I thought it was pretty fun. :) Alright, that’s it for today. Good night one and all! ",
        "date": "2005-11-22",
        "objectID": "/staying-on-schedule/:0:0",
        "tags": null,
        "title": "Staying on schedule",
        "uri": "/staying-on-schedule/"
    },
    {
        "categories": null,
        "content": "Having Monday “off” was great! Got up fairly early and started jamming away at programming. The weird messaging errors I was getting yesterday have been fixed, so I’ve moved on to getting the 3D viewport back into operation with manipulators and the whole bit. Should be just a matter of copying and pasting the code from before. My new goal is to have a walking character controlled by a simple brain by next week. Alright, off to bed so that I can be prepared for (in announcer voice): DAY 2 – Programming Madness! ",
        "date": "2005-11-21",
        "objectID": "/first-day-off/:0:0",
        "tags": null,
        "title": "First day off",
        "uri": "/first-day-off/"
    },
    {
        "categories": null,
        "content": "Today was chilly. Actually, the days have just been getting progressively colder. Wait a minute, it is winter after all so I suppose that makes sense…yeah. I’m starting to get really excited about my project(s)! There is an end in sight! Can’t believe the semester is almost over already. Kept thinking it was going to be done sooner, but I can see why it hasn’t. The time has definitely not been a waste, though, as I’ve learned a lot over the last few months. May not have as much to show for it, but that comes next. ;) I only have one class this next week!!!! This is going to be great…a whole week that I can devote to work and to desperately attempting at reaching a pleasant state of serenity (translation: relaxing). For those who celebrate thanksgiving, start getting ready for it! The best way to do that is go out, buy a turkey, set up some candles around it, and worship the turkey and its utter awesomeness. For the turkey allows us to reach culinary nirvana…praise be the turkey god! ",
        "date": "2005-11-20",
        "objectID": "/burgers/:0:0",
        "tags": null,
        "title": "Burgers",
        "uri": "/burgers/"
    },
    {
        "categories": null,
        "content": "I’m back!! There sure has been a lot going on in my world recently. As many of you know, I’ve been using Perforce as my source control software for a while now…well, it’s now working on a larger scale with multiple people getting updates. The server is just running on my machine right now, but once the projects get larger I’ll be switching it over to a dedicated server. I also spent some time last week making some improvements to my workflow. Since my last reinstall, I hadn’t installed Cygwin, so was missing some missing some tools that I’ve really grown to love. So, I got that installed, and set up all my tools. Vim, emacs, and bash are now back to full operation…w00t! I personally feel that if you do a lot of cross-platform development, then you should really try to use as many cross-platform tools as possible in your everyday workflow so that switching back and forth between platforms isn’t so painful. Also setup cross-compiling so that I can compile my projects to Linux from Windows. Still need to get my engine set up for that and create the jam files necessary for that, but I won’t do that until the first release as things are changing a lot right now. I’m glad one of my classes has forced me to use Haskell. Ever since I was introduced to functional languages many years back, I’ve really enjoyed using them and have found them excellent for some of the work I do. Lisp (and its derivatives like Scheme), however, are not suited to some tasks. By their very definition, a functional language allows you to do induction proofs on your functions, but when you have super-late binding like Lisp, it’s still very easy to run into cases you hadn’t anticipated. With haskell, you have such strong type inference and safety, that you are forced to think through your functions and data types, which can be great. Haskell has made me actually get excited about F#…the only .NET I might actually start using. I’ve used C# a bit, but there’s nothing revolutionary enough to make me want to use it. Lets see…oh yeah, it was my birthday Wednesday, so now I’m the big 21…feel so old. O_o Been eating lots of good food to celebrate, and got a cool gamedev tshirt. Life is good. :) Released a little rendering engine demo last week to test it out. It’s a bit slow right now as it’s not using any of the recent features on video cards. Once I get it faster, I’ll post it here so that my faithful readers can have something to look at. :p Alright, enough rambling. I’m back for good now, so you’ll be seeing lots more rambling. If you read all this, post a comment…I want to know who’s reading it. :) ",
        "date": "2005-11-19",
        "objectID": "/turkeys-and-marshmallows/:0:0",
        "tags": null,
        "title": "Turkeys and marshmallows",
        "uri": "/turkeys-and-marshmallows/"
    },
    {
        "categories": null,
        "content": "Keeping the update short today as there really isn’t much to talk about. Added a particle engine today. It works really well and is very fast. Now I’m going to add some shadows. First I’ll implement stencil shadows and then some more recent techniques. The link for today is quite cool. It’s a source code search engine. Check it out: Codase ",
        "date": "2005-11-06",
        "objectID": "/sunday-night-findings/:0:0",
        "tags": null,
        "title": "Sunday night findings",
        "uri": "/sunday-night-findings/"
    },
    {
        "categories": null,
        "content": "Wow…it’s really been a while since I’ve updated. Time just slipped away it seems. I’ve been doing a lot of reading lately which probably explains it. Finally got the DVD set released for Siggraph of this year, so I’ve been reading a lot of the papers, and there are many interesting ones. The only thing is that reading one paper usually results in the reading of 10 other papers that it references, so it can become quite time consuming. Most interesting for me are the papers on fluid dynamics, image processing, and rigid dynamics. Once the engine I’m working on is finished I should have a nice framework for doing tests and implementing some of the algorithms. Have been working steadily on the engine, but got distracted yesterday to make a plug-in for Houdini. Got it finished up today. It’s perhaps the simplest plug-in I’ve made it a long time, but it was fun and a nice break from the other stuff. One of the problems with Houdini is their layout algorithm is a bit…primitive. So, the plug-in adds a new command to Houdini that uses GraphViz to layout the nodes. It does a MUCH better job than the built-in algorithms. This can be really helpful if you have a complex network and Houdini refuses to give you a good layout. Well, I’ve been persuaded by some friends to make a demo or two with the render engine so that I can have something to show, so I’m switching gears a little bit to work on that. Shouldn’t take too long, and it’ll be good to have something concrete to demo the engine with. That’s all for now. Hope you all have a great weekend! ",
        "date": "2005-11-04",
        "objectID": "/thoughts-and-ramblings/:0:0",
        "tags": null,
        "title": "Thoughts and ramblings",
        "uri": "/thoughts-and-ramblings/"
    },
    {
        "categories": null,
        "content": "Managed to get a lot done today…did a lot more writing. Seem to have the writing bug these last few days or even weeks. I suppose it’s a good thing as I’ve needed to do a lot of documentation recently. When I go through a long period of research I just feel the need to write down my discoveries. Finished the last test of the week this morning. That’s a big relief for me. Now I can focus most of my energy back on the “important” things of life. There’s an interesting discussion on Voxels over at odforce, so go check it out…NOW! :) Voxels Alright, I suppose I’d be a bad programmer not to inform you all that the final version of Visual Studio 2005 has started shipping. This is exciting news for me! The beta’s have really been almost useless to me as most of the limitations directly influenced me in a very negative way. But this does seem to be a really good update by Microsoft, so I’m happy. :) ",
        "date": "2005-10-27",
        "objectID": "/time-what-is-time/:0:0",
        "tags": null,
        "title": "Time what is time?",
        "uri": "/time-what-is-time/"
    },
    {
        "categories": null,
        "content": "The title really says it all, which means this will definitely be a short update. Spent much of the day studying for my two tests with little breaks to work on the scripting portion of the engine. Also added another two pages onto the article I’m writing regarding the creation of production-level software…that should be an interesting read once it’s done. Finished the geology test at 10pm…went alright, but the prof. definitely expects a lot from the students. The average was 47% last time, which I think would demand a restructuring of the test, but this test didn’t reflect any changes. In fact, it actually seems to be worse. I think I did alright, but I’ll just have to see when the results are posted. Got the Seapine newsletter today (a company that creates source code management software) and they had an interesting snippet from Michael Russell’s blog. If you’re interested in QA for your software, it’s definitely worth a read (I found it very interesting). Test Plan #2: Milestone Acceptance Criteria ",
        "date": "2005-10-26",
        "objectID": "/long-and-arduous-day/:0:0",
        "tags": null,
        "title": "Long and arduous day",
        "uri": "/long-and-arduous-day/"
    },
    {
        "categories": null,
        "content": "Got back on Houdini this evening as I now have the footage necessary to complete the shot. Should have some sample shots done this week. The footage is pretty clean…only a little cleanup and wire-removal necessary. This is going to be the first project in which I’ve heavily used COPs, so this should be an interesting experience…hopefully a positive one. I’ve done lots of tests with COPs in the past, but it’s when you really do a full-blown project that you get to see it perform. I do have pretty high expectations, though, as the main compositing package I’ve had experience with is Shake. Will let you all know how it handles my abuse. :) Made excellent progress on Agents today as well. Did some more documentation work outlining some of the processes that Agents must be able to form, which I’ll use as a guide for how to progress. Integrated all the major functions that control the engine over to LUA commands, which was EXTREMELY easy. LuaBind is a godsend…if you ever plan to integrate a scripting language into an application, please PLEASE consider using a boost wrapper. It will make your life a lot easier. Anyways, with some of the major commands now in place, I’ll be moving on to adding toolbar buttons and such that utilize those commands to bring the interface to life. Alright, that’s all for today. Got a test in geology tomorrow, so I better get to bed. Bye all! ",
        "date": "2005-10-25",
        "objectID": "/great-houdinimagicyeah/:0:0",
        "tags": null,
        "title": "The great Houdini...magic...yeah",
        "uri": "/great-houdinimagicyeah/"
    },
    {
        "categories": null,
        "content": "Managed to get LUA and TCL implemented nicely into the engine now. The next step is to add all the necessary functions for communicating with the engine. This will be a LOT easier now that I’m using LuaBind. I’ve now set a few new deadlines for myself since I have a more organized schedule put together. Should be by the middle of next month I’m going to start sending it out to people for testing. It’s going to be very primitive when I do start the testing, but better to start early than wait too long and be stuck with a bad design…it’s one thing for me to like and quite another for users to like it. Since I already had gotten a long way in the first design, I have a lot of code to reference, which is making things go a lot faster. Let’s see…the link for today is for those who fancy trance, techno, and all that…in fact, those that do like that type of music probably already know about it, but here you go anyway: Digitally Imported. Another thing…found an interesting application today called Anark Gameface, which allows you to create game interfaces inside their custom application, and then export that out to XML, which you then implement into your own game engine via their SDK. It all seems very well done, and I’d really like to be able to test this out as the idea seems solid. Creating a really good interface for a game is not an easy task and being able to take that chore away from the programmer and place it on the artist entirely is an excellent idea. I’ve struggled with it, and I’ve read about and talked to many programmers (like the Thief 3 guys) who have also spent far too much time on it…this product may actually turn out to be a really good idea! ",
        "date": "2005-10-24",
        "objectID": "/mushrooms/:0:0",
        "tags": null,
        "title": "Mushrooms?",
        "uri": "/mushrooms/"
    },
    {
        "categories": null,
        "content": "Been busy planning various things over the last few days. Trying to decide what things are of greatest importance and making a plan of what needs to be done and when. My website, demo reel, and Agents are really high on the priority list. As I’ll be flying back to China over Christmas break, I’m seriously considering buying a laptop so that I can continue my work. By spending ~$1000 I can get a decent laptop that should suite my needs. It’s a considerable investment, but one I think will pay off quickly. If anyone knows of any deals or sees any in the next month or so, please let me know. It’s frustrating sometimes being interested in so many different topics, because I start spreading myself too thin and not really focusing on any topic well enough. I must find a select number of things and stay focused on those…bah…so difficult. Anyway, a bit on the random side today…more tomorrow when I’m less incoherent. ",
        "date": "2005-10-23",
        "objectID": "/thinking-in-brain/:0:0",
        "tags": null,
        "title": "The thinking in the brain",
        "uri": "/thinking-in-brain/"
    },
    {
        "categories": null,
        "content": "It was certainly nice to have a bit of a break. I still did some homework, but I tried really hard to relax as much as possible. Worked some more on my engine and website…both are coming along nicely. Ran into somewhat of a snag with the engine, though. Was trying to split the engine up into separate dynamic libraries (they were all static before), and it was extremely easy for the render engine and scene graph, but my custom controls made in wxWidgets was a serious pain. Essentially, I wanted to compile a library that contained all of wxWidgets functions as well as my own, but it seems the only way to do this is include all the source files of wxWidgets into my project to compile it to a library. Strangely enough, you can’t compile the static library of wxWidgets into your own dynamic library. I asked around on the wxWidgets forums, and that seems to be their conclusion as well. Seems terribly bizarre, but I’m not going to worry about it until I need to when I make an official release. Unfortunately, that whole mess pretty much killed my Friday as I worked most of the day on it….rather disappointing. On the bright side, I played some B\u0026W 2 as well as some SSX on Tour. Both are very fun games, but I actually enjoyed SSX on Tour a lot more. The moves are cool and there’s a lot you can do. Then again, I love to ski, so that could have something to do with it. Not saying I don’t like playing god once in a while, but it certainly gets old after a while. :) Think that pretty much sums up the last few days. Hope you all had a great weekend! EDIT: Was looking through the cg char forums and found this: TSM 2.0. It’s a really nice rig for Maya that’s being developed for TSM 2.0. Go check it out! ",
        "date": "2005-10-16",
        "objectID": "/and-so-college-resumes/:0:0",
        "tags": null,
        "title": "And so college resumes...",
        "uri": "/and-so-college-resumes/"
    },
    {
        "categories": null,
        "content": "Today has been great! No class or homework to distract me, so I got to really focus on programming and designing my engine. The interface between the widgets, graphics engine, and the scene graph is now almost complete…everything is communicating nicely. Need to create an API for creating plug-ins, and then it will be mostly complete. The interface for creating new Nodes is quite clean and was inspired mostly by Maya and Houdini (as well as some XSI). All of those have really nice APIs IMO, but they all have inherent flaws, which I’m hoping to have overcome. This is not to say that the architecture is complete, but it is very far along now…you could say it has entered alpha stages. Yesterday (or the day before?), I created a quick Python script to generate visual studio project files for the HDK (Houdini) sample files. Never really used Python a lot in the past, but it really shined for doing this, which probably means I’ll be using Python more frequently in the future…or perhaps Ruby, as it is also a really good language, but I chose Python only because I’ve had more experience with it. Well, that’s it for today. Hope that all who have Fall break continue to enjoy it! ",
        "date": "2005-10-13",
        "objectID": "/fall-break-woohoo/:0:0",
        "tags": null,
        "title": "Fall break!!!  Woohoo!",
        "uri": "/fall-break-woohoo/"
    },
    {
        "categories": null,
        "content": "Been really working hard on my projects these last few days…hence the lack of updates. Yesterday I spent quite some time writing scripts for Houdini using Python. What’s particularly cool about Houdini is you can imbed Python scripts (or any scripts…or any files for that matter) into an HDA. So you can still distribute just one HDA file, and all the scripts come bundled within. I plan to record some videos over how this can all be done…and also show how to create some GUIs. When scripting for Houdini in the past, I just used HScript along with some Tcl/Tk for interfaces, but using Python is usually a better approach as Python includes a host of great libraries. Well, Agents is finally coming back together since the growing pains recently experienced. To the people who I promised the new version of Agents: I’m really sorry for such a long delay! I’ll keep you all updated as to when a version will be available. This entire project has taken a lot longer than I anticipated, but it’s really been a positive experience overall….and an educational one as well. Three days of class, and then Fall Break!! That’s a whole 2 days off! ;) May not sound like a lot, but it sure is nice to get a bit of a breather mid-semester. If you haven’t yet seen Serenity (unfortunately, I haven’t yet either), go see the first 9 minutes here: Serenity ",
        "date": "2005-10-09",
        "objectID": "/fall-break-is-closing-in/:0:0",
        "tags": null,
        "title": "Fall break is closing in....",
        "uri": "/fall-break-is-closing-in/"
    },
    {
        "categories": null,
        "content": "News of Autodesk buying Alias was somewhat surprising to me. Although Autodesk is larger than Alias, were the sale reversed, I wouldn’t be very shocked. What does this mean for consumers and developers? From reading their FAQ, I’m guessing there won’t be any major changes (much like with Alias' purchase of Kaydara). It’s really hard to say, though. I’m really hoping there won’t be any major changes, because I can’t help thinking Autodesk would mess it up. The purchase just doesn’t seem like that good of a business move, but I’m going to withhold judgement until more information is released about it. Not much other news, just very busy with my projects as usual. Anyway, here’s a random clip to entertain you: Framestore Commercial ",
        "date": "2005-10-04",
        "objectID": "/autodesk-aliaswhat/:0:0",
        "tags": null,
        "title": "Autodesk + Alias...what??",
        "uri": "/autodesk-aliaswhat/"
    },
    {
        "categories": null,
        "content": "Classes started out today really slow…seemed as though it would never end. But once they were done, and I returned home, I began work on the my philosophy paper. The goal is to write a paper regarding Calgary University’s class “Computer Viruses and Malware”. It essentially teaches people how to write viruses in order to teach them how to write more secure software. This is pretty old news (2003), but it is still quite an interesting topic. If anyone has any thoughts on the topic, please let me know…I’d be interested to hear what you think. After I was finished with all of that, I moved on to more of my own projects. As I mentioned before, Agents went through some growing pains, and so I’ve split everything up and have been reworking some of the individual parts. Today, I wanted to test out some pair programming (XP style), so my brother and I sat down and discussed the best approach to creating a DAG system for agents…something more flexible than my previous implementation. Well, we actually spent more than 3 hours on it, and have something that I really like. It’s by no means complete, but it’s a great start. In fact, it worked out so well, that I would really like to do that again sometime. Teaming up with someone that knows as much as you is great, because it allows you to bounce ideas off each other and anticipate potential problems. If you’re not familiar with XP, go here. Well worth looking into. Let’s see…here’s a cool link for today: VFXY ",
        "date": "2005-10-03",
        "objectID": "/designing-and-xp/:0:0",
        "tags": null,
        "title": "Designing and XP",
        "uri": "/designing-and-xp/"
    },
    {
        "categories": null,
        "content": "Serenity is in theaters and yet I still haven’t seen it. *sigh* Must go see it!! It’s so much harder without a car, as there isn’t any public transportation to the theater…of which there is only ONE! Just need to convince one of my friends to go watch it with me, which is harder than it sounds as none of my friends here are movie buffs or firefly fans. I will think of something… Digital Fusion 5 and XSI 5 are released now, which is pretty cool, but that doesn’t really effect me as neither are packages I use frequently. Still, some of the features introduced in them are excellent, so go check out the new features list if you haven’t already. No tests this week!! So, expect lots of posts and updates! ;) I’ve made some great progress on my website, so I may actually have something up this week…might not work out, but it’s a worthy goal. ",
        "date": "2005-10-02",
        "objectID": "/meaning-of-life-and-everything/:0:0",
        "tags": null,
        "title": "The meaning of life and everything...",
        "uri": "/meaning-of-life-and-everything/"
    },
    {
        "categories": null,
        "content": "These last few days have been crazy! Tests with LOTS of memorizing…very time consuming. But they are now over!! And hence my focus is back to the fun stuff. Have a few links that may interest some of you…if you live under a rock and haven’t found them already: http://www.vfxblog.com http://www.digitalgypsy.com/vfxlog/ http://www.fxguide.com/ All of them are really excellent sources for information on the latest news in the effects industry. The podcast at fxguide is also worth listening to…entertaining and informative. Aruna’s blog (the digital gypsy one) is usually a really good read, so check that out as well. This link is a bit old already, but check it out if you haven’t already: http://movies.aol.com/movie_exclusive_the_chronicles_of_narnia Not really very informative, but very cool nonetheless. Lots of great shots from the movie. Really looking forward to this one! As for my projects, I’ve finally returned to them and am making great progress! Agents is now split up into a few different libraries and is much cleaner than before. My website is starting to come together as I’ve now decided what content to include. Houdini research has been fun as well…been doing more tests with DOPs and using Renderman compliant renderers directly in Houdini. Although I’m not a huge fan of using VOPs to create shaders (except for really simple ones), it’s really great how well VOPs works to create Renderman shaders. It really is totally integrated into Houdini, which is fantastic. It sure is good to be back blogging! ",
        "date": "2005-09-28",
        "objectID": "/i-can-see-light/:0:0",
        "tags": null,
        "title": "I can see the light!",
        "uri": "/i-can-see-light/"
    },
    {
        "categories": null,
        "content": "Not much to report. Had a geology test tonight. It wasn’t easy, but I think I did alright on it. The prof. said that if you managed to get every problem wrong, you would get 100% on the exam. Sounds easy, but with multiple choice tests you really have to know what’s going on to purposefully answer every one wrong. I didn’t try it this time, but if my grade for the class is really high at the end of the semester I might give it a try. :) Alright, that’s gonna be all for today. ",
        "date": "2005-09-21",
        "objectID": "/more-madness/:0:0",
        "tags": null,
        "title": "More madness",
        "uri": "/more-madness/"
    },
    {
        "categories": null,
        "content": "Life has been quite busy these last few days…classes, tests, homework, and my freelance projects…lots going on. This week I have two tests, so I have lots of studying to do. On another note, Agents is going through some growing pains. It’s got to the point where there was too much code and it needed to be split up a bit more. So, I’ve been doing that over the last few days. Not the most exciting thing to do, but it’ll be very worth it in the end. Been doing more work with Houdini these last few days and putting serious thought into my demo reel. I’ve done a lot over the last few years, but never compiled the work together. So figured it was about time. The weekend was crazy and I didn’t update my blog at all, but things should be back to normal now….hopefully. ",
        "date": "2005-09-19",
        "objectID": "/weekend/:0:0",
        "tags": null,
        "title": "Weekend",
        "uri": "/weekend/"
    },
    {
        "categories": null,
        "content": "First off, everyone who hasn’t yet seen the new Harry Potter trailer MUST go see it: Trailer. Looks like it’s going to be another awesome movie! Sure it may not be better than the book, but that’s to be expected. :) Today I got the 12th issue of Stash!!! When I was at Siggraph, I signed up for a free issue and they actually sent it!! IT IS AWESOME!!! If I had a bit more money, I’d definitely get a subscription. Each issue comes with a DVD and a booklet. The DVD has music videos, shorts, commercials, and all sorts of clips…all of which look great. Watching that actually “wasted” almost two hours of my day today. Alright, none of my programmer news is going to top those two things, so I’ll just post more tomorrow. :) ",
        "date": "2005-09-15",
        "objectID": "/eye-candy/:0:0",
        "tags": null,
        "title": "Eye candy!!",
        "uri": "/eye-candy/"
    },
    {
        "categories": null,
        "content": "This semester I’m taking a bunch of relatively “easy” classes one of which is Geology. The class has been really simple so far, but the tests may turn out to be really hard…who knows. At any rate, the homework this time was to go around campus looking at rocks. It was a nice walk, but getting up real close and examining a statue must have looked really weird to those passing by. It was fun, though…got to identify rocks…determine how much feldspar or biotite was in a particular rock…determine how rocks “grew” into what they were today…etc etc. Interesting, but this does not mean I’m going to abandon CS and become a geologist. On programming news, I implemented the help into Agents today. As Agents is cross-platform, it is using a HTML help system (as opposed to CHM, for instance), so to integrate the help I simply created a window that displayed HTML (wxHtmlWindow). Also added some toolbar buttons for back, forward, stop, refresh, and home…basically created a simple browser in the application. Didn’t take long at all to do–love when that’s the case. Also emailed the folks at Graphic Remedy to see if I could get a student discount for gDEBugger. I’ve been using it quite a bit for the graphics engine, and would really like to buy it. However, the $490 price tag is a bit high for me. Don’t get me wrong, it’s entirely worth the price, I just can’t afford it. If you’re doing any OpenGL programming, go check this tool out…it’s awesome! Well, that’s all the interesting news. ",
        "date": "2005-09-13",
        "objectID": "/staring-at-rocks/:0:0",
        "tags": null,
        "title": "Staring at rocks",
        "uri": "/staring-at-rocks/"
    },
    {
        "categories": null,
        "content": "Mondays…always a bit slower than the rest of the week. Got some good programming done on the engine. Then switched over to my website a bit. Got some Flash working and the design is a lot more the way I want it. Will hopefully have something to show soon. Finally got Evergrey’s album The Inner Circle…it rocks! Highly recommend it, so go buy it and listen to it…now! And here’s an image I sketched a few minutes ago: Yeah…scary. :) ",
        "date": "2005-09-12",
        "objectID": "/music-and-houdini/:0:0",
        "tags": null,
        "title": "Music and Houdini",
        "uri": "/music-and-houdini/"
    },
    {
        "categories": null,
        "content": "Computer is back and operational today! Got to do some more with the engine today. Almost done with the Overlay system for drawing text and all that. Also added in some more logging code, so that I can track down errors more easily. Finally spent some time with Houdini and DOPs (Dynamic Operators) today…been wanting to do that since Siggraph. First impressions with it have been really good. Relatively easy to set up and manage, and the flexibilty you get is really nice. It’s incredibly easy to transfer the simulated data between the other operators and manipulate it as you wish. I’ll be doing some more tests this week and might just throw up some test renders as well. Hope everyone had a great weekend! ",
        "date": "2005-09-11",
        "objectID": "/graphics-engine-houdini-and-dops/:0:0",
        "tags": null,
        "title": "Graphics Engine, Houdini, and DOPs",
        "uri": "/graphics-engine-houdini-and-dops/"
    },
    {
        "categories": null,
        "content": "As I have quite a few important projects at the moment, being able to back everything up is really important. Problem is, the amount of data to back up on some of these projects is considerable (\u003e 1GB). A backup everyday would result in no hard drive space really quick. To alleviate this problem, I went ahead and bought another 250gb HD meant specifically for backups. Now nightly or weekly backups can be a reallity. The HD arrived yesterday, so I began the backup process of some of my older products. Once that was done (which took many, many hours…the reason I didn’t update my blog yesterday), I began defragging the old drive (which will continue to be my main development drive). Well, turns out the drive was 98% fragmented. It was obviously slowing everything down a LOT, so it’s a good thing I decided to defrag it. Problem is, I couldn’t do much work at all, because it was defragging my main development drive. So instead, I watched some training videos and did some reading. Also, instead of using Norton Systemwork’s defrag utility, I switched to using O\u0026O Defrag. Hadn’t used it before, so gave the trial version a test and I’m really liking it. A lot more information on the progress unlike most defraggers. It also has support for a number of different defragging techniques depending on how you use your HDs. Highly recommend giving it a try. Alright, that’s all for today…good night one and all! ",
        "date": "2005-09-10",
        "objectID": "/hard-drives/:0:0",
        "tags": null,
        "title": "Hard drives",
        "uri": "/hard-drives/"
    },
    {
        "categories": null,
        "content": "Today I sat down, looked at the zip problem again, and had it done in around 30 minutes. Hate when that kindof thing happens. At any rate, it is now implemented into my render engine. All shaders, models, and textures are all loaded from a zip file now (with password protection). I added another level of abstraction for the file management, so that all procedures could read from zips or off the hard drive directly. Makes life a whole lot easier. What ended up helping me the most was an article from GameDev: http://www.gamedev.net/reference/articles/article1992.asp The article was interesting, but mainly the links were useful. Primarily the link to Gilles Vollant’s unzip.h. I happened upon it yesterday, but it was a much older version that was incompatible with the newest version of zlib. This one worked great! I only made a few slight changes to unzip.h and then added a wrapper for it. Here’s a trimmed down version for all of you who would like to work with zip files: ZipTest Although not well documented, it should help you out if you want to use zip files in your own projects. I included full source as well as the project files for VS7 so you should be good to go. Let me know if there are any terrible bugs in it. Alright, that’s now over so I can get back to the rest of the engine. Yay! ",
        "date": "2005-09-08",
        "objectID": "/long-day/:0:0",
        "tags": null,
        "title": "Long day...",
        "uri": "/long-day/"
    },
    {
        "categories": null,
        "content": "Today my goal was to get zip files supported in the engine so that I could store all data into a zip file (with password protection) in order to keep data organized. Started with zlib but soon found that it would take far too much code to create a flexible wrapper for it. Searching for a wrapper that would work, however, took much more work than I expected. Finally found ZipArchive which seems to be an excellent library, but for commercial use, it costs money. As I didn’t have much time today, that’s as far as I got…quite disappointing. If anyone knows of a better library for this, please let me know!! Also did a bit of web design today. I’m trying to find a good layout for my website, which takes some thought. Need a logo as well, so I played with a few ideas on that. Here was one of my ideas: Any thoughts? Would love to hear some comments on it. I guess that’ll wrap it up for today’s news. ",
        "date": "2005-09-07",
        "objectID": "/web-design-and-zip-files/:0:0",
        "tags": null,
        "title": "Web design and zip files",
        "uri": "/web-design-and-zip-files/"
    },
    {
        "categories": null,
        "content": "Not much programming was done today. Had to get some stuff reorganized for some of my upcoming projects (like the Material Editor). I have some custom controls that I created for Agents, and I would like to use those same controls for the Material Editor. So today I spent some time separating various components in Agents into separate libraries so that I could resuse them. Should’ve done that in the first place, but better late than never. Today wasn’t all that fun…hopefully I’ll have some more interesting news tomorrow. ",
        "date": "2005-09-06",
        "objectID": "/organizing/:0:0",
        "tags": null,
        "title": "Organizing",
        "uri": "/organizing/"
    },
    {
        "categories": null,
        "content": "Got the shader handling classes implemented!! Yay! It now loads the shaders, compiles them, and links them together. The scene manager renders all passes, and each pass uses the correct shaders (vertex and/or fragment) and initializes their parameters properly. Now the task is to get XML working for loading and saving the shaders. These XML files will hold the data for a material in general, so each material doesn’t have to have shaders…it can just use the texture units and traditional blending if that does the trick. The shader builder I’ll be creating will export to this XML format, so the builder can create shaders and generic (old-school) materials. Also need to get a packaging system in place (like the .pk3 files in Q3), to store all the shaders, textures, and models. This will need to have the option of being password protected, however, as that will prove to be useful in some cases. ",
        "date": "2005-09-05",
        "objectID": "/fun-with-gpu/:0:0",
        "tags": null,
        "title": "Fun with the GPU",
        "uri": "/fun-with-gpu/"
    },
    {
        "categories": null,
        "content": "Today was much more productive than yesterday. After getting back from shopping (needed some food desperately), I started work on the engine. Previously, my engine only supported TGAs for textures, which was fine before, but as this is more generic, it needed more format support. Therefore, looked around a bit and decided to use DevIL. It’s open source and under the Lesser GPL (a necessity since the engine might be used commercially). Plus, it supports a host of different formats: JPG, TGA, TIFF, etc etc…all packaged into a nice library. So, got that implemented into my engine and it’s working beautifully. The loading code is now very small thanks to the library. I did, however, run into a bit of a hitch when implementing it. For some reason, all textures on the models I tested were completely messed up. Turns out I had to call: iluFlipImage(); When loading images with the library it loads the images flipped, so you have to unflip it. That was really the only problem I had with it, so that’s not too bad. Now that techniques, passes and all that have been implemented, I now need a way of storing that data to disk. Originally, I had thought of using a simple script to represent a material (like Quake 3 and OGRE), but considering it some more, XML seems to be the better approach. Scripts are easier to read, but I intend on creating a UI for creating materials so that’s not a problem. As for speed, parsing an XML file is extremely fast, and TinyXml is an excellent library for the job. Used the library with Agents, and it worked like a charm. So there…that’s what I’m going to do. So that’s pretty much where I stand now. Next on the agenda is to integrate my shader handling classes into the mix, so that I can get some per-pixel lighting, parallax mapping, and all that fun stuff implemented. Alright, that about does it…another update will be coming tomorrow. ",
        "date": "2005-09-04",
        "objectID": "/image-loading-and-xml/:0:0",
        "tags": null,
        "title": "Image loading and XML",
        "uri": "/image-loading-and-xml/"
    },
    {
        "categories": null,
        "content": "Today started out bright and early with a trip to the driving class, which lasted all the way to 4pm. It was quite awful. The class was filled with mostly teenagers, and some people from other countries that had never driven a car before. All that to say I was a bit out of place…college student seeking cheaper insurance…weird. We spent most of the time watching cheesy videos on how people can die from being stupid on the road. It was…special. But it’s over, so all is good. Once I got back from that I switched straight over to the engine. It’s really starting to come together. A lot of the base code is now in place and functional, so I’m able to load a mesh and send it to the scene manager, which renders the mesh with the proper materials and everything. Not very special, but since it’s been rebuilt from the ground-up with a new design, it’s not a shabby accomplishment. This time around, there were some different priorities. First off, it’s not just limited to OpenGL anymore…it has support for any APIs. You just need to create a new class off of the render class, implement a few drawing functions, and you’re done. Second, it now has support for shaders via GLSL and HLSL, but again, flexible enough that other languages could be added. Both of these were not priorities in the last engine (just a simple viewport for Agents), but for the game it’s very important. Once this render engine is in a more stable/usable state, I will be using it for Agents as well. On Agents, I need to go into some of the custom controls I made ever so long ago and clean it up a bit. As needs have morphed considerably since the beginning, a lot of changes were made with the “Code and Fix” methodology, which I HATE. Now that I have a good idea of what I need, it needs a rewrite. Plus, the look of the controls is, for the most part, hard-coded, which is very…not good. Random link for today: Project Offset. If you haven’t checked it out already, it has cool tech vids…so go check it out! Alright, enough ramblings. Off to bed…need to get an early start tomorrow. ",
        "date": "2005-09-03",
        "objectID": "/design-contemplations_03/:0:0",
        "tags": null,
        "title": "Design contemplations",
        "uri": "/design-contemplations_03/"
    },
    {
        "categories": null,
        "content": "Did some more work on the game engine today. Over the last few days I’ve been examining the source code for a number of engines: OGRE, Quake 3, irrlicht, and Unreal. So far, I’m really liking the structure of OGRE and will most probably adopt some if its design decisions. Having worked with Unreal so much, my design will definitely be influenced, but that’s alright since Tim (and the rest of the Epic guys) did a great job with the engine. Trying to take these initial steps of the game engine slowly. If the base design and implementation is solid, I won’t have to go back later and fix everything. I will be creating some UML diagrams for it soon…once I have them finished, I’ll post them here. Also decided to adopt the Doxygen commenting style so that I can have an open-source method of code documentation. I much prefer Doc-O-Matic and the natural coding style it adopts, but not being able to afford a copy is hindering me at the moment. The rest of my website is coming together. Having not done much web development in the past, this has been a fun experience…for the most part. There are a lot of parts to it, though, so it’s still a ways from being truly done. Tomorrow is the first day of a driving course I signed up for. Taking it will save me a lot on car insurance when I do end up getting a license, so it’s worth it. Only down-side is that it starts at 8:00am tomorrow and goes till 4:00pm. That’s going to be one long, boring day. ",
        "date": "2005-09-02",
        "objectID": "/game-engines/:0:0",
        "tags": null,
        "title": "Game engines",
        "uri": "/game-engines/"
    },
    {
        "categories": null,
        "content": "Recently, there’s been a massive trend towards blogging, and being a computer scientist I feel the inexplicable need to jump on the bandwaggon. So this is the beginning. I suppose a good start would be to give an overview of the type of things I’ll be talking about. As I’m an avid programmer and software engineer, a frequent topic will be my adventures and discoveries in my most recent projects. Right now I have two big projects: an Artificial Intelligence application (code-named “Agents”) and a game engine for a Privateer remake. Both are big projects, and since I’m the only coder for both, there are lots of design and management decisions, which I’ll talk about. Since I’m very involved in graphics projects, you will also see me rigging characters and doing animations. The main packages I use for this are Maya and Houdini, but I’ve also rigged characters in XSI; therefore, you may see some talk on my philosophies about rigging and all that fun stuff. Finally, I own a Wacom tablet and LOVE to use it! You might, therefore, see me post a sketch or two. Mind you, I’m not an expert artist…I’m a true beginner, but trying hard to get better. That should do it for an intro. Hopefully, this will be a great reference for not only me, but also for those of you who read this blog. And please, feel free to comment!! ",
        "date": "2005-09-01",
        "objectID": "/attack-of-blog_01/:0:0",
        "tags": null,
        "title": "Attack of the blog",
        "uri": "/attack-of-blog_01/"
    },
    {
        "categories": null,
        "content": " Picture of Joel Van Eenwyk ⚠ 🚧 This is a work in progress. You have landed on my page it seems. My interests are all over the place but you will see some commonality in my love for low-level coding, graphics, emulation, and DevOps type work. Finding clean, reproducible, processes that make it easier for groups of people to iterate on code and innovate gets me pretty excited. Currently working on cross-platform provisioning scripts built with Docker, Ansible, and many other tried and true tools. ",
        "date": "0001-01-01",
        "objectID": "/about/:0:0",
        "tags": null,
        "title": "About",
        "uri": "/about/"
    },
    {
        "categories": null,
        "content": "Résumé 15+ years in software engineering 6+ years in leadership roles Expertise in video game middleware product development Programming languages: C/C++, C#, Python Cross-platform front-end development including: wxWidgets, Tcl/Tk Digital content creation: Maya, 3dsmax, Houdini Engineering tools: Visual Studio, Perforce, Git Experience Oct 2015 - Present: Microsoft, Principal Field Application Engineer Responsible for scoping out future partnerships and analyzing industry trends to ensure we invest our resources appropriately to avoid reactive development practices. Manage team in Europe, Japan, and North America. Gather feedback from clients worldwide to drive roadmap for Havok products. Nov 2011 - Oct 2015: Havok, Field Application Engineer Manage China, Korea, Europe, Japan, and North American team. Visit clients, presented at conferences, and use feedback to drive product roadmap. Create and maintain tools to manage evaluations e.g. email generation, benchmarking Aug 2007 - Nov 2011: Buzz Monkey, Software Engineer Improve tool pipelines in 3dsmax and Maya. Port games to platforms including PS3, PS2, and Wii with focus on graphics and platform optimization. Aug 2006 - Dec 2006: TA at University of Kansas 2003 - 2004: 3D Buzz, Software engineer and educator Achievements 2012: Destiny [Bungie] 2012: Spec Ops: The Line (PS3) [2K Games] 2012: Rinth Island (iOS, Facebook) [Buzz Monkey Software, Chillingo] 2010: The Tomb Raider Trilogy (PS3) 2010: ESPNU College Town (Facebook) 2010: Tony Hawk: RIDE 2 (PS3/360 and Wii) 2009: Tony Hawk: RIDE (PS3 and Wii) 2008: Tomb Raider: Underworld (PS2 and Wii) 2004: Unreal Tournament 2004 (PC) 2004: Co-Author of “Mastering Unreal Technology: The Art of Level Design” Education 2007: Outstanding Senior at KU 2002 - 2007: BS in Computer Science at KU ",
        "date": "0001-01-01",
        "objectID": "/about/:0:1",
        "tags": null,
        "title": "About",
        "uri": "/about/"
    },
    {
        "categories": null,
        "content": " Email: joel.vaneenwyk@gmail.com ",
        "date": "0001-01-01",
        "objectID": "/contact/:0:0",
        "tags": null,
        "title": "Contact",
        "uri": "/contact/"
    },
    {
        "categories": null,
        "content": "Social Twitter ",
        "date": "0001-01-01",
        "objectID": "/contact/:1:0",
        "tags": null,
        "title": "Contact",
        "uri": "/contact/"
    },
    {
        "categories": null,
        "content": "Tools Always been a fan of finding the “right” tool but with time I’ve discovered that it’s not really possible to have the perfect tool. It’s more important that you have a tool-belt and that you’re flexible enough to change things out when needed. World is changing too fast to stay on only one thing. ",
        "date": "0001-01-01",
        "objectID": "/tools/:1:0",
        "tags": null,
        "title": "Tools",
        "uri": "/tools/"
    },
    {
        "categories": null,
        "content": "To Review NetMaster : Internet connection monitoring and control Ditto clipboard manager Reverse Engineering Tools Review Download Debugging Tools for Windows - WinDbg - Windows drivers | Microsoft Docs OllyDbg v1.10 Immunity Debugger sandboxie-plus/Sandboxie: Sandboxie - Open Source BugChecker ",
        "date": "0001-01-01",
        "objectID": "/tools/:2:0",
        "tags": null,
        "title": "Tools",
        "uri": "/tools/"
    }
]
